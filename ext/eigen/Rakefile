# Generated by mkrf, monkey patched for opencv-ffi
require 'rake/clean'


SRC = FileList['*.cpp']
OBJ = SRC.ext('o')
CC = 'gcc'
CPP = 'g++'

CLEAN.include(OBJ)
CLOBBER.include('libcvffi_eigen.so', 'mkrf.log', 'Rakefile')

ADDITIONAL_OBJECTS = ''

LDSHARED = "gcc -shared "

LIBPATH =  "-L/home/amarburg/.rvm/rubies/ruby-1.9.2-p290/lib -L/home/amarburg/usr/lib"

INCLUDES = "-I/home/amarburg/.rvm/rubies/ruby-1.9.2-p290/include/ruby-1.9.1 -I/home/amarburg/.rvm/rubies/ruby-1.9.2-p290/include/ruby-1.9.1/x86_64-linux -I/home/amarburg/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/1.9.1/x86_64-linux -I/home/amarburg/.rvm/rubies/ruby-1.9.2-p290/lib/ruby/site_ruby/1.9.1 -I."

LIBS = "-lpthread -lrt -ldl -lcrypt -lm -lstdc++ -lopencv_core"

CFLAGS = "-fPIC  -O3 -ggdb -Wextra -Wno-unused-parameter -Wno-parentheses -Wpointer-arith -Wwrite-strings -Wno-missing-field-initializers -Wno-long-long  -fPIC -I/home/amarburg/usr/include -I/usr/local/include/eigen3 -DHAVE_EIGEN3_EIGEN_CORE"

RUBYARCHDIR = "#{ENV["RUBYARCHDIR"]}"
LIBRUBYARG_SHARED = "-Wl,-R -Wl,/home/amarburg/.rvm/rubies/ruby-1.9.2-p290/lib -L/home/amarburg/.rvm/rubies/ruby-1.9.2-p290/lib -lruby"

task :default => :build_library

# Add one layer of indirection so I can generically call "rake build_library"
# and have it work ... or not work if the wrong rakefile is being run
task :build_library => 'libcvffi_eigen.so'

rule '.o' => '.c' do |t|
  sh "#{CC} #{CFLAGS} #{INCLUDES} -o #{t.name} -c #{t.source}"
end

rule '.o' => '.cpp' do |t|
  sh "#{CPP} #{CFLAGS} #{INCLUDES} -o #{t.name} -c #{t.source}"
end

DEPS = OBJ.clone.add('Rakefile')
desc "Build this extension"
file 'libcvffi_eigen.so' => DEPS do
  sh "#{LDSHARED} #{LIBPATH} -o libcvffi_eigen.so #{OBJ} #{ADDITIONAL_OBJECTS} #{LIBS} #{LIBRUBYARG_SHARED}"
end

desc "Rebuild rakefile"
file 'Rakefile' => 'mkrf_conf.rb' do |t|
  ruby 'mkrf_conf.rb'
  puts "Rebuilt Rakefile.  Run 'rake libcvffi_eigen' again"
end

desc "Install this extension"
task :install => 'libcvffi_eigen.so' do
  makedirs "#{RUBYARCHDIR}"
  install "libcvffi_eigen.so", "#{RUBYARCHDIR}"
end


